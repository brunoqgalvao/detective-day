version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: detective_day_postgres
    restart: unless-stopped
    profiles: ["local-db"]
    ports:
      - "5434:5432" # local dev access; not required in cloud
    environment:
      POSTGRES_DB: detective_day
      POSTGRES_USER: detective_user
      POSTGRES_PASSWORD: detective_pass_2024
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - detective_postgres_data:/var/lib/postgresql/data
      - ./backend/src/db/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U detective_user -d detective_day"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    container_name: detective_day_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3010
      # DATABASE_URL can be overridden for managed DBs (e.g., Neon)
      DATABASE_URL: ${DATABASE_URL:-postgresql://detective_user:detective_pass_2024@postgres:5432/detective_day}
      # Enable SSL when using Neon or other managed DBs (optional)
      DATABASE_SSL: ${DATABASE_SSL:-false}
      # Optional, only needed for CORS if not proxying through frontend
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
    env_file:
      - backend/.env
    # Expose for local debugging; not required in cloud when proxied
    ports:
      - "3010:3010"

  frontend:
    build:
      context: ./frontend
      args:
        # Build the frontend to call backend via same-origin /api
        VITE_API_URL: /api
    container_name: detective_day_frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"

volumes:
  detective_postgres_data:
    name: detective_day_postgres_data
